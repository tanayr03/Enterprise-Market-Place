<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="com.webstore.controllers" />
	
	<mvc:annotation-driven />
	 <!-- ............................................................................................................................................... -->
    <mvc:resources location="/resources/" mapping="/resources/**"/>
     <!-- ............................................................................................................................................... -->
    
    <!-- For localization , language change accordingly and picking labels from jsp-->
    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    
    <!-- ............................................................................................................................................... -->
    
     <!--mvc:interceptors
        <bean class="com.webstore.interceptor.TestInterceptor"></bean>
      /mvc:interceptors
     This interceptor will be called for all the URL's but y doing the below steps and writing it
          in this way would make call to this only for the mentioned URL. (mapping path)
      -->
    <mvc:interceptors>
    <mvc:interceptor>
    <mvc:mapping path="/market/products/add"/>
        <bean class="com.webstore.interceptor.TestInterceptor"></bean>
    </mvc:interceptor>
    
     <!-- ............................................................................................................................................... -->
    
    <!-- Added for changing locale. also have to add cookie locale resolver bean -->	
     <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="siteLanguage"/>
     </bean>
    </mvc:interceptors>
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
        <property name="cookieName" value="localeCookie"/>
        <property name="cookieMaxAge" value="3600"/>
    </bean>
    
     <!-- ............................................................................................................................................... -->
 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix"><value>/WEB-INF/views/</value></property>
		<property name="suffix"><value>.jsp</value></property>
	</bean>
	
	 <!-- ............................................................................................................................................... -->
	
	<!-- the multipart resolver is used to upload the file  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <!-- setting maximum upload size -->
		<property name="maxUploadSize" value="100000" />
	</bean>
	
	 <!-- ............................................................................................................................................... -->
	
<!-- the next lines are for Autowiring beans -->		
   
   
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sys?serverTimezone=UTC" />
		<property name="username" value="root" />
		<property name="password" value="123456789" />
	</bean>
	
   <bean id = "productService" class = "com.webstore.service.impl.ProductServiceImpl"></bean>
   <bean id = "userService" class = "com.webstore.service.impl.UserServiceImpl"></bean>
   
   <bean id = "productDAO" class = "com.webstore.dao.impl.ProductDAOImpl">
       <constructor-arg index="0" ref="dataSource"/>
   </bean>
   
   <bean id = "userDao" class="com.webstore.dao.impl.UserDaoImpl">
        <!--  Constructor based  -->
        <constructor-arg index="0" ref="dataSource"/> 
        <!--Can also do setter based injection here 
         <property name="dataSource" ref="dataSource"></property> -->
   </bean>
   
   <bean id = "userValidator" class = "com.webstore.beanvalidator.UserValidator"></bean>
   
</beans>
